plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id "com.google.protobuf" version "0.8.18"
}

group = 'ru.mooncess'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.1")
	protobuf_version = '3.23.4'
	grpc_version = '1.58.0'
	grpc_client_version = '2.15.0.RELEASE'
}

sourceSets {
	main {
		java {
			srcDirs 'build/generated/source/proto/main/java'
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.postgresql:postgresql:42.7.5'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'

	implementation 'org.springframework.boot:spring-boot-starter-validation:3.4.3'

	implementation "io.grpc:grpc-netty:${grpc_version}"
	implementation("net.devh:grpc-client-spring-boot-starter:${grpc_client_version}") {
		exclude group: 'io.grpc', module: 'grpc-netty-shaded'
	}
	compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.5'

	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobuf_version}"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpc_version}"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
